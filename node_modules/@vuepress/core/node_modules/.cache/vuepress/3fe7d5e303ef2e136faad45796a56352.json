{"remainingRequest":"/Users/sjacobs/git/k8dash-pages/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sjacobs/git/k8dash-pages/docs/.vuepress/theme/components/custom/Install.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sjacobs/git/k8dash-pages/docs/.vuepress/theme/components/custom/Install.vue","mtime":1609216209247},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0luc3RhbGwnLAogIG1ldGhvZHM6IHsKCiAgICAuLi5tYXBNdXRhdGlvbnMoWwogICAgICAndXBkYXRlU2VsZWN0ZWREb2NWZXJzaW9uJwogICAgXSksCgogICAgdXBkYXRlSW5zdGFsbFBhdGgoZXYpIHsKICAgICAgLy8gdXBkYXRlIHRoZSB2ZXJzaW9uIGFjY29yZGluZ2x5IGluIHRoZSBVSSB3aGVuIHRoZQogICAgICAvLyB1c2VyIHN3aXRjaGVzIHRvIGEgZGlmZmVyZW50IHZlcnNpb24KCiAgICAgIC8vIHNldCB0aGUgdXBkYXRlZCBpbnN0YWxsIHZlcnNpb24gaW4gdGhlIHN0b3JlCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlU2VsZWN0ZWRJbnN0YWxsVmVyc2lvbicsIGV2KQoKICAgICAgLy8gY2hhbmdlIHRoZSBVUkwgdG8gcmVmbGVjdCB0aGUgdmVyc2lvbiBjaGFuZ2UKICAgICAgdGhpcy4kcm91dGVyLnJlcGxhY2UoewogICAgICAgIHBhdGg6IGAvaW5zdGFsbC8ke2V2fWAsCiAgICAgICAgbWV0YTogewogICAgICAgICAgdmVyc2lvbjogZXYKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAoKICAgIG1hcFZlcnNpb25NZXRhVG9JbnN0YWxsVmVyc2lvbigpIHsKICAgICAgY29uc3QgbWV0YVZhbHVlID0gdGhpcy4kcm91dGUubWV0YS52ZXJzaW9uCiAgICAgIGlmICggbWV0YVZhbHVlICkgewogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlU2VsZWN0ZWRJbnN0YWxsVmVyc2lvbicsIG1ldGFWYWx1ZSkKICAgICAgfQogICAgfSwKCiAgICByZWRpcmVjdFRvTGF0ZXN0VmVyc2lvbigpIHsKICAgICAgaWYgKCAhdGhpcy4kcm91dGUubWV0YS52ZXJzaW9uIHx8IHRoaXMuJHJvdXRlLnBhdGggPT09ICcvaW5zdGFsbC8nICkgewogICAgICAgIC8vIHJlZGlyZWN0IHRvIHRoZSBsYXRlc3QgcmVsZWFzZSByb3V0ZQogICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHsKICAgICAgICAgIHBhdGg6ICcvaW5zdGFsbC9sYXRlc3QvJywKICAgICAgICAgIG1ldGE6IHsKICAgICAgICAgICAgdmVyc2lvbjogdGhpcy5nZXRMYXRlc3RSZWxlYXNlCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgfQogICAgfQoKICB9LAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsKICAgICAgJ2dldEluc3RhbGxNZXRob2RzJywKICAgICAgJ2dldExhdGVzdFJlbGVhc2UnLAogICAgICAnZ2V0U2VsZWN0ZWRJbnN0YWxsVmVyc2lvbicsCiAgICAgICdyZWxlYXNlc0FzU2VsZWN0VmFsdWVzJwogICAgXSksCgogICAgLy8gdGhpcyBpcyB1c2VkIGFzIHRoZSBtb2RlbCBmb3IgdGhlIHZlcnNpb24gc2VsZWN0b3IKICAgIGRlZmF1bHRTZWxlY3RlZEluc3RhbGxWZXJzaW9uOiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy5nZXRTZWxlY3RlZEluc3RhbGxWZXJzaW9uCiAgICAgIH0sCiAgICAgIHNldCh2YWx1ZSkgewogICAgICAgIHRoaXMudXBkYXRlSW5zdGFsbFBhdGgodmFsdWUpCiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvLyB0aGlzIGVuc3VyZXMgdGhhdCB0aGUgdXNlciBpcyBhbHdheXMgb24gdGhlIGxhdGVzdCB2ZXJzaW9uCiAgICAvLyBpbiBjYXNlIHRoZXkgYXJlIG9uIHRoZSBJbnN0YWxsIHBhZ2UgYW5kIGhhcHBlbiB0byBuYXZpZ2F0ZQogICAgLy8gdG8gaXQgYWdhaW4gdmlhIHRoZSBtYWluIG5hdiAod2hpY2ggc2VuZHMgdGhlbSB0byB0aGUgYmFyZQogICAgLy8gcGF0aCB3aXRob3V0IGEgdmVyc2lvbiBhcHBlbmRlZCkKICAgICRyb3V0ZSAodG8sIGZyb20pIHsKICAgICAgdGhpcy5yZWRpcmVjdFRvTGF0ZXN0VmVyc2lvbigpCiAgICAgIHRoaXMubWFwVmVyc2lvbk1ldGFUb0luc3RhbGxWZXJzaW9uKCkKICAgIH0KICB9LAogIGJlZm9yZU1vdW50KCkgewogICAgdGhpcy5yZWRpcmVjdFRvTGF0ZXN0VmVyc2lvbigpCiAgICB0aGlzLm1hcFZlcnNpb25NZXRhVG9JbnN0YWxsVmVyc2lvbigpCiAgfQp9Owo="},{"version":3,"sources":["Install.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Install.vue","sourceRoot":"docs/.vuepress/theme/components/custom","sourcesContent":["<template>\n  <div class=\"page-container page-container--install\">\n\n    <header class=\"page-header text-center bg-gradient\">\n      \n      <div class=\"inner\">\n        <h1>Install {{ $site.title }}</h1>\n      \n        <div v-if=\"getInstallMethods && getInstallMethods.length\" class=\"version-selector-wrapper\">\n\n          <select\n            name=\"version-selector\"\n            class=\"version-selector\"\n            id=\"version-selector\"\n            v-model=\"defaultSelectedInstallVersion\">\n            <option \n              v-for=\"tag in releasesAsSelectValues\" \n              :value=\"tag.version\" \n              :key=\"tag.version\" \n              :selected='$route.meta.version === tag.version'\n            >\n              {{tag.text}}\n            </option>\n          </select>\n          <!-- .version-selector -->\n\n          <div v-if=\"getSelectedInstallVersion\" class=\"version-selector__version-notifier\">\n            <p class=\"page-sub-title\">You are viewing installation instructions for <strong>{{getSelectedInstallVersion}}</strong>.</p>\n            <p><a href=\"https://github.com/kumahq/kuma/blob/master/CHANGELOG.md\">Changelog</a> • <a href=\"https://github.com/kumahq/kuma/blob/master/UPGRADE.md\">Upgrade Path</a> • <a href=\"/community\">Slack Support</a></p>\n          </div>\n          <!-- .version-selector__version-notifier -->\n\n          <div v-if=\"getSelectedInstallVersion !== getLatestRelease\" class=\"version-alert\">\n            <div class=\"warning custom-block\">\n              <p class=\"custom-block-title\">Careful!</p>\n              <p>You are viewing installation instructions for an outdated version of {{getSiteData.title}}.</p>\n              <p><router-link :to=\"{ path: `/install/${getLatestRelease}/` }\">Go here</router-link> \n              to view installation instructions for the latest version.</p>\n            </div>\n          </div>\n          <!-- .version-alert -->\n\n        </div>\n        <!-- .version-selector-wrapper -->\n        \n      </div>\n      <!-- .inner -->\n\n    </header>\n\n    <div class=\"inner\">\n\n      <div v-if=\"getInstallMethods\" class=\"install-methods-wrapper\">\n        <ul class=\"install-methods flex flex-wrap justify-center -mx-4\">\n          <li v-for=\"(item, index) in getInstallMethods\" :key=\"index\" class=\"install-methods__item w-full sm:w-1/2 lg:w-1/3 px-4 mb-8\">\n            <router-link\n              :to='`/${getSiteData.themeConfig.docsDir}/${getSelectedInstallVersion}/installation/${item.slug}/`'\n              class=\"install-methods__item-link flex flex-wrap justify-center items-center\"\n            >\n              <div class=\"install-methods__item-logo w-full sm:w-1/4 px-3\">\n                <img :src=\"item.logo\" class=\"object-contain w-full\">\n              </div>\n              <div class=\"install-methods__item-title w-full sm:w-3/4 px-3\">\n                <h3>{{item.label}}</h3>\n              </div>\n            </router-link>\n          </li>\n        </ul>\n      </div>\n      <!-- .install-methods-wrapper -->\n\n    </div>\n    <!-- .inner -->\n    \n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex'\n\nexport default {\n  name: 'Install',\n  methods: {\n\n    ...mapMutations([\n      'updateSelectedDocVersion'\n    ]),\n\n    updateInstallPath(ev) {\n      // update the version accordingly in the UI when the\n      // user switches to a different version\n\n      // set the updated install version in the store\n      this.$store.commit('updateSelectedInstallVersion', ev)\n\n      // change the URL to reflect the version change\n      this.$router.replace({\n        path: `/install/${ev}`,\n        meta: {\n          version: ev\n        }\n      })\n    },\n\n    mapVersionMetaToInstallVersion() {\n      const metaValue = this.$route.meta.version\n      if ( metaValue ) {\n        this.$store.commit('updateSelectedInstallVersion', metaValue)\n      }\n    },\n\n    redirectToLatestVersion() {\n      if ( !this.$route.meta.version || this.$route.path === '/install/' ) {\n        // redirect to the latest release route\n        this.$router.replace({\n          path: '/install/latest/',\n          meta: {\n            version: this.getLatestRelease\n          }\n        })\n      }\n    }\n\n  },\n  computed: {\n    ...mapGetters([\n      'getInstallMethods',\n      'getLatestRelease',\n      'getSelectedInstallVersion',\n      'releasesAsSelectValues'\n    ]),\n\n    // this is used as the model for the version selector\n    defaultSelectedInstallVersion: {\n      get() {\n        return this.getSelectedInstallVersion\n      },\n      set(value) {\n        this.updateInstallPath(value)\n      }\n    }\n  },\n  watch: {\n    // this ensures that the user is always on the latest version\n    // in case they are on the Install page and happen to navigate\n    // to it again via the main nav (which sends them to the bare\n    // path without a version appended)\n    $route (to, from) {\n      this.redirectToLatestVersion()\n      this.mapVersionMetaToInstallVersion()\n    }\n  },\n  beforeMount() {\n    this.redirectToLatestVersion()\n    this.mapVersionMetaToInstallVersion()\n  }\n};\n</script>"]}]}