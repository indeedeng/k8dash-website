{"remainingRequest":"/Users/sjacobs/git/k8dash-pages/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sjacobs/git/k8dash-pages/docs/.vuepress/theme/global-components/ServiceMeshConForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sjacobs/git/k8dash-pages/docs/.vuepress/theme/global-components/ServiceMeshConForm.vue","mtime":1609216209252},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnCmltcG9ydCB7IFZhbGlkYXRpb25Qcm92aWRlciwgVmFsaWRhdGlvbk9ic2VydmVyLCBleHRlbmQgfSBmcm9tICd2ZWUtdmFsaWRhdGUnCmltcG9ydCB7IHJlcXVpcmVkLCBlbWFpbCB9IGZyb20gJ3ZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzJwoKLy8gSSBhbSBkb2luZyB0aGlzIGJlY2F1c2Ugb2YgYW4gZXJyb3IgdGhhdCBvY2N1cnJlZCB3aGVuIHVzaW5nIEtJY29uCmltcG9ydCBTcGlubmVyIGZyb20gJ0B0aGVtZS9nbG9iYWwtY29tcG9uZW50cy9JY29uU3Bpbm5lcicKCi8vIHJlcXVpcmVkIHZhbGlkYXRpb24KZXh0ZW5kKCdyZXF1aXJlZCcsIHsKICAuLi5yZXF1aXJlZCwKICBtZXNzYWdlOiAnVGhpcyBmaWVsZCBpcyByZXF1aXJlZC4nCn0pCgovLyBlbWFpbCB2YWxpZGF0aW9uCmV4dGVuZCgnZW1haWwnLCB7CiAgLi4uZW1haWwsCiAgbWVzc2FnZTogJ1RoaXMgbXVzdCBiZSBhIHZhbGlkIGVtYWlsJwp9KQoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtRGF0YTogewogICAgICAgIGVtYWlsOiAnJywKICAgICAgICBmaXJzdF9uYW1lOiAnJywKICAgICAgICBsYXN0X25hbWU6ICcnLAogICAgICAgIENvbXBhbnk6ICcnIC8vIG11c3QgYmUgY2FwaXRhbGl6ZWQgdG8gbWF0Y2ggUGFyZG90IGZvcm0gaGFuZGxlcgogICAgICB9LAogICAgICBmb3JtSGlkZGVuRmllbGRzOiB7CiAgICAgICAgdXRtX2NvbnRlbnQ6IHRoaXMuJHJvdXRlLnF1ZXJ5LnV0bV9jb250ZW50IHx8IG51bGwsCiAgICAgICAgdXRtX21lZGl1bTogdGhpcy4kcm91dGUucXVlcnkudXRtX21lZGl1bSB8fCBudWxsLAogICAgICAgIHV0bV9zb3VyY2U6ICdrdW1hLVNlcnZpY2VNZXNoQ29uLWxhbmRpbmctcGFnZScsCiAgICAgICAgdXRtX2NhbXBhaWduOiB0aGlzLiRyb3V0ZS5xdWVyeS51dG1fY2FtcGFpZ24gfHwgbnVsbCwKICAgICAgICB1dG1fdGVybTogdGhpcy4kcm91dGUucXVlcnkudXRtX3Rlcm0gfHwgbnVsbCwKICAgICAgICB1dG1fYWRfZ3JvdXA6IHRoaXMuJHJvdXRlLnF1ZXJ5LnV0bV9hZF9ncm91cCB8fCBudWxsCiAgICAgIH0sCiAgICAgIGZvcm1TdGF0dXM6IG51bGwsCiAgICAgIGZvcm1TZW5kaW5nOiBmYWxzZQogICAgfQogIH0sCiAgY29tcG9uZW50czogewogICAgVmFsaWRhdGlvblByb3ZpZGVyLAogICAgVmFsaWRhdGlvbk9ic2VydmVyLAogICAgU3Bpbm5lcgogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydnZXRTZXJ2aWNlTWVzaENvbkZvcm1FbmRwb2ludCddKSwKICAgIGZvcm1EaXN0YW5jZUZyb21Ub3AoKSB7CiAgICAgIGNvbnN0IG1hcmtlciA9IHRoaXMuJHJlZnNbJ2Zvcm1NZXNzYWdlTWFya2VyJ10KCiAgICAgIHJldHVybiB3aW5kb3cucGFnZVlPZmZzZXQgKyBtYXJrZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5mb3JtQmVoYXZpb3JIYW5kbGVyKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGZvcm1CZWhhdmlvckhhbmRsZXIoKSB7CiAgICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy4kcm91dGUucXVlcnkuZm9ybV9zdWNjZXNzCiAgICAgIGNvbnN0IHN0YXR1cyA9IHF1ZXJ5ID8gSlNPTi5wYXJzZShxdWVyeSkgOiBudWxsCgogICAgICB0aGlzLmZvcm1TdGF0dXMgPSBzdGF0dXMKCiAgICAgIGlmIChzdGF0dXMgPT09IGZhbHNlIHx8IHN0YXR1cyA9PT0gdHJ1ZSkgewogICAgICAgIHdpbmRvdy5zY3JvbGxUbyh7CiAgICAgICAgICB0b3A6IHRoaXMuZm9ybURpc3RhbmNlRnJvbVRvcCwKICAgICAgICAgIGJlaGF2aW9yOiAnYXV0bycKICAgICAgICB9KQogICAgICB9CiAgICB9LAoKICAgIGZvcm1Jc1N1Ym1pdHRpbmcoKSB7CiAgICAgIHRoaXMuZm9ybVNlbmRpbmcgPSB0cnVlCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["ServiceMeshConForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ServiceMeshConForm.vue","sourceRoot":"docs/.vuepress/theme/global-components","sourcesContent":["<template>\n  <div class=\"form-wrapper\">\n    <validation-observer v-slot=\"{ invalid, passes }\">\n      <form\n        v-if=\"formStatus === null || formStatus === false\"\n        class=\"form-vertical\"\n        method=\"post\"\n        :action=\"getServiceMeshConFormEndpoint\"\n      >\n        <input\n          v-for=\"(key, value) in formHiddenFields\"\n          :name=\"value\"\n          :value=\"key\"\n          type=\"hidden\"\n        />\n        <input type=\"hidden\" name=\"pardot-link\" :value=\"getServiceMeshConFormEndpoint\" />\n\n        <!-- first, last name -->\n        <div class=\"field-group lg:flex lg:-mx-2\">\n          <!-- first name -->\n          <div class=\"form-stack w-full lg:w-1/2 m-2\">\n            <label for=\"first_name\" class=\"sr-only\">First Name</label>\n            <validation-provider rules=\"required\" v-slot=\"{ errors }\" class=\"form-note-wrapper\">\n              <input\n                v-model=\"formData.first_name\"\n                id=\"first_name\"\n                name=\"first_name\"\n                type=\"text\"\n                placeholder=\"First Name\"\n              />\n              <span class=\"note note--error\">{{ errors[0] }}</span>\n            </validation-provider>\n          </div>\n\n          <!-- last name -->\n          <div class=\"form-stack w-full lg:w-1/2 m-2\">\n            <label for=\"last_name\" class=\"sr-only\">Last Name</label>\n            <validation-provider rules=\"required\" v-slot=\"{ errors }\" class=\"form-note-wrapper\">\n              <input\n                v-model=\"formData.last_name\"\n                id=\"last_name\"\n                name=\"last_name\"\n                type=\"text\"\n                placeholder=\"Last Name\"\n              />\n              <span class=\"note note--error\">{{ errors[0] }}</span>\n            </validation-provider>\n          </div>\n        </div>\n\n        <div class=\"field-group lg:flex lg:-mx-2\">\n          <!-- company -->\n          <div class=\"form-stack w-full lg:w-1/2 m-2\">\n            <label for=\"Company\" class=\"sr-only\">Company</label>\n            <input\n              v-model=\"formData.Company\"\n              id=\"Company\"\n              name=\"Company\"\n              type=\"text\"\n              placeholder=\"Company\"\n            />\n          </div>\n          <!-- email -->\n          <div class=\"form-stack w-full lg:w-1/2 m-2\">\n            <label for=\"email\" class=\"sr-only\">Email</label>\n            <validation-provider\n              rules=\"required|email\"\n              v-slot=\"{ errors }\"\n              class=\"form-note-wrapper\"\n            >\n              <input\n                v-model=\"formData.email\"\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Work Email\"\n              />\n              <span class=\"note note--error\">{{ errors[0] }}</span>\n            </validation-provider>\n          </div>\n        </div>\n\n        <div class=\"button-wrapper\">\n          <button\n            :disabled=\"invalid\"\n            type=\"submit\"\n            name=\"submit\"\n            class=\"btn\"\n            :class=\"{ 'is-sending': invalid === false && formSending === true }\"\n            @click=\"formIsSubmitting()\"\n          >\n            <span v-if=\"invalid === false && formSending === true\">\n              <Spinner />\n            </span>\n            <span :class=\"{ 'is-hidden': invalid === false && formSending === true }\">\n              Register Now\n            </span>\n          </button>\n        </div>\n      </form>\n    </validation-observer>\n\n    <div ref=\"formMessageMarker\"></div>\n\n    <div v-if=\"formStatus === true\" class=\"tip custom-block\">\n      <p class=\"custom-block-title\">Thank you!</p>\n      <p>Please check your inbox for your exclusive ServiceMeshCon offers.</p>\n    </div>\n\n    <div v-if=\"formStatus === false\" class=\"danger custom-block\">\n      <p class=\"custom-block-title\">Whoops!</p>\n      <p>Something went wrong! Please try again later.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport axios from 'axios'\nimport { ValidationProvider, ValidationObserver, extend } from 'vee-validate'\nimport { required, email } from 'vee-validate/dist/rules'\n\n// I am doing this because of an error that occurred when using KIcon\nimport Spinner from '@theme/global-components/IconSpinner'\n\n// required validation\nextend('required', {\n  ...required,\n  message: 'This field is required.'\n})\n\n// email validation\nextend('email', {\n  ...email,\n  message: 'This must be a valid email'\n})\n\nexport default {\n  data() {\n    return {\n      formData: {\n        email: '',\n        first_name: '',\n        last_name: '',\n        Company: '' // must be capitalized to match Pardot form handler\n      },\n      formHiddenFields: {\n        utm_content: this.$route.query.utm_content || null,\n        utm_medium: this.$route.query.utm_medium || null,\n        utm_source: 'kuma-ServiceMeshCon-landing-page',\n        utm_campaign: this.$route.query.utm_campaign || null,\n        utm_term: this.$route.query.utm_term || null,\n        utm_ad_group: this.$route.query.utm_ad_group || null\n      },\n      formStatus: null,\n      formSending: false\n    }\n  },\n  components: {\n    ValidationProvider,\n    ValidationObserver,\n    Spinner\n  },\n  computed: {\n    ...mapGetters(['getServiceMeshConFormEndpoint']),\n    formDistanceFromTop() {\n      const marker = this.$refs['formMessageMarker']\n\n      return window.pageYOffset + marker.getBoundingClientRect().top\n    }\n  },\n  mounted() {\n    this.formBehaviorHandler()\n  },\n  methods: {\n    formBehaviorHandler() {\n      const query = this.$route.query.form_success\n      const status = query ? JSON.parse(query) : null\n\n      this.formStatus = status\n\n      if (status === false || status === true) {\n        window.scrollTo({\n          top: this.formDistanceFromTop,\n          behavior: 'auto'\n        })\n      }\n    },\n\n    formIsSubmitting() {\n      this.formSending = true\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../styles/custom/config/variables';\n\n.form-note-wrapper {\n  position: relative;\n\n  .note {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    z-index: 1;\n    width: 100%;\n  }\n}\n\n.button-wrapper {\n  text-align: center;\n\n  button {\n    margin-left: auto;\n    margin-right: auto;\n  }\n}\n\nbutton.is-sending {\n  position: relative;\n  background-color: $green-base !important;\n  cursor: not-allowed;\n\n  span:not(.is-hidden) {\n    display: block;\n    position: absolute;\n    left: calc(50% - 12px);\n  }\n}\n\n.is-hidden {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.form-wrapper .custom-block {\n  box-shadow: 0 0 0 1px #cccccc, 0 3px 6px 0 #eaecef;\n  padding: 20px;\n  text-align: left;\n  // border-left: 0;\n\n  // success\n  &.tip {\n    background-color: #fff;\n  }\n\n  // error\n  &.danger {\n  }\n\n  p {\n    &:first-of-type {\n      margin-top: 0;\n      padding-top: 0;\n    }\n\n    &:last-of-type {\n      margin-bottom: 0;\n      padding-bottom: 0;\n    }\n  }\n}\n</style>\n"]}]}