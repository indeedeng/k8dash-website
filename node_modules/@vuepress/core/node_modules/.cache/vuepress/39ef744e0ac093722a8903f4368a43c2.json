{"remainingRequest":"/Users/sjacobs/git/k8dash-pages/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sjacobs/git/k8dash-pages/docs/.vuepress/theme/global-components/VersionNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sjacobs/git/k8dash-pages/docs/.vuepress/theme/global-components/VersionNav.vue","mtime":1609216209253},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sjacobs/git/k8dash-pages/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdWZXJzaW9uTmF2JywKICBtZXRob2RzOiB7CiAgICByZWRpcmVjdFRvU2VsZWN0ZWREb2NWZXJzaW9uKHZhbCkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3VwZGF0ZVNlbGVjdGVkRG9jVmVyc2lvbicsIHZhbCkKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIHBhdGg6IGAvJHt0aGlzLmdldFNpdGVEYXRhLnRoZW1lQ29uZmlnLmRvY3NEaXJ9LyR7dmFsfS9gLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgdmVyc2lvbjogdmFsCiAgICAgICAgfQogICAgICB9KQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAncmVsZWFzZXNBc1NlbGVjdFZhbHVlcycsCiAgICAgICdnZXRMYXRlc3RSZWxlYXNlJwogICAgXSksCgogICAgLy8gdGhpcyBpcyB1c2VkIGFzIHRoZSBtb2RlbCBmb3IgdGhlIHZlcnNpb24gc2VsZWN0b3IKICAgIGRlZmF1bHRTZWxlY3RlZEluc3RhbGxWZXJzaW9uOiB7CiAgICAgIGdldCgpIHsKICAgICAgICBjb25zdCByb3V0ZVBhdGggPSB0aGlzLiRyb3V0ZS5wYXRoCiAgICAgICAgY29uc3QgdGVzdCA9ICcvZG9jcy8nCiAgICAgICAgCiAgICAgICAgLy8gZmlyc3QsIGNoZWNrIHRvIHNlZSB0aGF0IHdlJ3JlIG9uIGEgZG9jcyBwYWdlOgogICAgICAgIGlmIChyb3V0ZVBhdGguc3RhcnRzV2l0aCh0ZXN0KSkgewogICAgICAgICAgLy8gMS4gaWYgd2UncmUgb24gYSBkb2NzIHBhZ2UsIGNoZWNrIHRoZSByb3V0ZXIgcGF0aCBhbmQgZXh0cmFjdCB0aGUgdmVyc2lvbgogICAgICAgICAgLy8gMi4gc2V0IHRoZSB2ZXJzaW9uIHNlbGVjdG9yIHRvIHRoZSBleHRyYWN0ZWQgdmVyc2lvbgogICAgICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnBhdGguc3BsaXQoJy8nKVsyXQogICAgICAgIH0KICAgICAgICBlbHNlIHsKICAgICAgICAgIC8vIGlmIHdlJ3JlIG9uIGEgcGFnZSBvdXRzaWRlIG9mIHRoZSBkb2NzLCBncmFiIHRoZSBsYXRlc3QgcmVsZWFzZQogICAgICAgICAgLy8gZnJvbSBvdXIgVnVleCBTdG9yZSBhbmQgc2V0IHRoZSB2ZXJzaW9uIHNlbGVjdG9yIHZhbHVlIHRvIHRoYXQgaW5zdGVhZAogICAgICAgICAgcmV0dXJuIHRoaXMuZ2V0TGF0ZXN0UmVsZWFzZQogICAgICAgIH0KICAgICAgfSwKICAgICAgc2V0KHZhbHVlKSB7CiAgICAgICAgdGhpcy5yZWRpcmVjdFRvU2VsZWN0ZWREb2NWZXJzaW9uKHZhbHVlKQogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["VersionNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VersionNav.vue","sourceRoot":"docs/.vuepress/theme/global-components","sourcesContent":["<template>\n  <form class=\"version-nav\">\n    <label for=\"doc-version-selector\">Version</label>\n    <select\n      name=\"doc-version-selector\"\n      class=\"version-selector\"\n      id=\"version-selector\"\n      v-model=\"defaultSelectedInstallVersion\">\n      <option \n        v-for=\"item in releasesAsSelectValues\" \n        :value=\"item.version\" \n        :key=\"item.version\">\n        {{item.text}}\n      </option>\n    </select>\n  </form>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'VersionNav',\n  methods: {\n    redirectToSelectedDocVersion(val) {\n      this.$store.commit('updateSelectedDocVersion', val)\n      this.$router.push({\n        path: `/${this.getSiteData.themeConfig.docsDir}/${val}/`,\n        params: {\n          version: val\n        }\n      })\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'releasesAsSelectValues',\n      'getLatestRelease'\n    ]),\n\n    // this is used as the model for the version selector\n    defaultSelectedInstallVersion: {\n      get() {\n        const routePath = this.$route.path\n        const test = '/docs/'\n        \n        // first, check to see that we're on a docs page:\n        if (routePath.startsWith(test)) {\n          // 1. if we're on a docs page, check the router path and extract the version\n          // 2. set the version selector to the extracted version\n          return this.$route.path.split('/')[2]\n        }\n        else {\n          // if we're on a page outside of the docs, grab the latest release\n          // from our Vuex Store and set the version selector value to that instead\n          return this.getLatestRelease\n        }\n      },\n      set(value) {\n        this.redirectToSelectedDocVersion(value)\n      }\n    }\n  }\n}\n</script>\n"]}]}