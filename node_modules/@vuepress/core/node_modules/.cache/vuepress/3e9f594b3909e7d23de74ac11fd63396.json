{"remainingRequest":"/Users/marielak/Desktop/k8dash-website/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/marielak/Desktop/k8dash-website/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/marielak/Desktop/k8dash-website/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/marielak/Desktop/k8dash-website/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/marielak/Desktop/k8dash-website/docs/overview/README.md?vue&type=template&id=634bac5f&","dependencies":[{"path":"/Users/marielak/Desktop/k8dash-website/docs/overview/README.md","mtime":1623696570911},{"path":"/Users/marielak/Desktop/k8dash-website/node_modules/cache-loader/dist/cjs.js","mtime":1619106447535},{"path":"/Users/marielak/Desktop/k8dash-website/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1619106453390},{"path":"/Users/marielak/Desktop/k8dash-website/node_modules/cache-loader/dist/cjs.js","mtime":1619106447535},{"path":"/Users/marielak/Desktop/k8dash-website/node_modules/vue-loader/lib/index.js","mtime":1619106453388},{"path":"/Users/marielak/Desktop/k8dash-website/node_modules/@vuepress/markdown-loader/index.js","mtime":1619106446829}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}